services:
  outline:
    image: docker.getoutline.com/outlinewiki/outline:latest
    container_name: outline
    env_file: ./docker.env
    expose:
      - 3000
    volumes:
      - storage-data:/var/lib/outline/data
    depends_on:
      - postgres
      - redis
    networks:
      - outline
      - proxy
      - uptime-kuma
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.outline.rule=Host(`docs.ryanmalonzo.fr`)"
      - "traefik.http.routers.outline.entrypoints=websecure"
      - "traefik.http.routers.outline.tls.certresolver=cloudflare"
      - "traefik.http.services.outline.loadbalancer.server.port=3000"
      - "traefik.http.routers.outline.middlewares=robots@file,crowdsec@file"

  redis:
    image: redis:7.4.1
    container_name: redis
    env_file: ./docker.env
    expose:
      - 6379
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      - outline
    restart: unless-stopped

  postgres:
    image: postgres:17.1
    container_name: postgres
    env_file: ./docker.env
    expose:
      - 5432
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "outline", "-U", "user"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - outline
    restart: unless-stopped

volumes:
  storage-data:
  database-data:

networks:
  outline:
  proxy:
    external: true
  uptime-kuma:
    external: true
